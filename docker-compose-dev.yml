volumes:
  langgraph-data:
    driver: local
services:
  langgraph-redis:
    image: docker.io/redis:6
    container_name: langgraph-redis
    healthcheck:
      test: redis-cli ping
      interval: 5s
      timeout: 1s
      retries: 5
  langgraph-postgres:
    image: pgvector/pgvector:pg16
    container_name: langgraph-postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - langgraph-data:/var/lib/postgresql/data
  langgraph-api:
    image: gemini-fullstack-langgraph-quickstart/langgraph-api:dev
    # Use the Dockerfile.dev in the backend directory for development
    build:
      context: .
      dockerfile: ./backend/Dockerfile.dev
    container_name: langgraph-api
    ports:
      - "8123:8000"
    volumes:
      # Mount the full project for live updates
      - .:/deps
    depends_on:
      langgraph-redis:
        condition: service_healthy
      langgraph-postgres:
        condition: service_started
    environment:
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      GOOGLE_API_KEY: ${GEMINI_API_KEY}
      LANGSMITH_API_KEY: ${LANGSMITH_API_KEY}
      REDIS_URI: redis://langgraph-redis:6379
      POSTGRES_URI: postgresql://postgres:postgres@langgraph-postgres:5432/postgres
    # Keep the container running for development
    command: tail -f /dev/null